package net.petcu.store.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DiscountAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiscountAllPropertiesEquals(Discount expected, Discount actual) {
        assertDiscountAutoGeneratedPropertiesEquals(expected, actual);
        assertDiscountAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiscountAllUpdatablePropertiesEquals(Discount expected, Discount actual) {
        assertDiscountUpdatableFieldsEquals(expected, actual);
        assertDiscountUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiscountAutoGeneratedPropertiesEquals(Discount expected, Discount actual) {
        assertThat(actual)
            .as("Verify Discount auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiscountUpdatableFieldsEquals(Discount expected, Discount actual) {
        assertThat(actual)
            .as("Verify Discount relevant properties")
            .satisfies(a -> assertThat(a.getDiscountCode()).as("check discountCode").isEqualTo(expected.getDiscountCode()))
            .satisfies(a -> assertThat(a.getDiscountType()).as("check discountType").isEqualTo(expected.getDiscountType()))
            .satisfies(a -> assertThat(a.getUsed()).as("check used").isEqualTo(expected.getUsed()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiscountUpdatableRelationshipsEquals(Discount expected, Discount actual) {
        // empty method
    }
}
